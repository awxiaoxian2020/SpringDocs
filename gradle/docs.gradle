import org.asciidoctor.gradle.jvm.AsciidoctorJPlugin
import org.asciidoctor.gradle.jvm.AsciidoctorTask

/**
 * Produce Javadoc for all Spring Framework modules in "build/docs/javadoc"
 */
apply plugin: "com.jcohy.docs"
apply plugin: "com.jcohy.oss-upload"

ext{
	language = "zh-cn"
	component = project.name
	version = project.version
}

task aggregatedAsciidoctor(type: Copy) {
	project.rootProject.gradle.projectsEvaluated {
		Set<Project> excludedProjects = ['spring-security','reactor','spring-data-redis']

		Set<Project> docsProjects = rootProject.subprojects.findAll {it != project }
				.findAll { it.plugins.hasPlugin(AsciidoctorJPlugin) }
		Set<Project> docsPdfProject = docsProjects.findAll{!excludedProjects.contains(it.name)}
		dependsOn docsProjects.asciidoctor
		dependsOn docsPdfProject.asciidoctorPdf
		destinationDir = project.file "${buildDir}/docs"
		docsProjects.each {project ->
			from(project.asciidoctor.outputDir) {
				into project.name+"/"+project.version+"/html"
			}
			from(project.asciidoctorPdf.outputDir) {
				into project.name+"/"+project.version+"/pdf"
			}
		}
	}
}

task docsZip(type: Zip) {
	dependsOn asciidoctor,
			asciidoctorPdf

	duplicatesStrategy "fail"
	from(asciidoctor.outputDir) {
		into "reference/htmlsingle"
	}
	from(asciidoctorPdf.outputDir) {
		into "reference/pdf"
		include "index.pdf"
		rename { "flight-framework-reference.pdf" }
	}
}

artifacts {
	archives docsZip
}

publishing {
	publications {
		maven(MavenPublication) {
			artifact docsZip
		}
	}
}
